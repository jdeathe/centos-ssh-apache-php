# ------------------------------------------------------------------------------
# Naming convention:
#
#    centos-ssh-apache-php@.service = {service-unit-install-template-name}
#              |
#              +--------------------- {image-name}
#
#    apache-php.register@.service = {service-unit-template-name}
#        |         |
#        |         +--------------- {service-unit-companion-name}
#        +------------------------- {service-unit-name}
#
#    apache-php.register@1.service = {service-unit-instance-name}
#        |         |     |
#        |         |     +---------- {service-unit-instance}
#        |         +---------------- {service-unit-companion-name}
#        +-------------------------- {service-unit-name}
#
#    apache-php.1.register = {service-unit-long-name}
#        |      |     |
#        |      |     +----- {service-unit-companion-name}
#        |      +----------- {service-unit-instance}
#        +------------------ {service-unit-name}
#
# To install:
#     sudo sed -e "s~{{SERVICE_UNIT_NAME}}~{service-unit-name}~g" \
#       {service-unit-install-template-name} \
#       > /etc/systemd/system/{service-unit-template-name}
#     sudo systemctl daemon-reload
#     sudo systemctl enable -f {service-unit-instance-name}
#
# Debugging:
#     sudo systemctl status {service-unit-instance-name}
#     journalctl -fn 50 -u {service-unit-instance-name}
#
# To uninstall:
#     sudo systemctl disable -f {service-unit-instance-name}
#     sudo systemctl daemon-reload
#     sudo rm /etc/systemd/system/{service-unit-template-name}
#     sudo systemctl daemon-reload
# ------------------------------------------------------------------------------

[Unit]
Description=centos-ssh-apache-php etcd registration // %p@%i
After=etcd.service
After=etcd2.service
After={{SERVICE_UNIT_NAME}}@%i.service
BindsTo={{SERVICE_UNIT_NAME}}@%i.service
RefuseManualStart=true
RefuseManualStop=true

[Service]
Environment="REGISTER_ETCD_PARAMETERS="
Environment="REGISTER_KEY_ROOT=/services/{{SERVICE_UNIT_NAME}}.%i"
Environment="REGISTER_TTL=60"
Environment="REGISTER_UPDATE_INTERVAL=55"

# Unregister service
ExecStartPre=/bin/bash -c \
  "if /usr/bin/etcdctl \
    ${REGISTER_ETCD_PARAMETERS} \
    ls \
    ${REGISTER_KEY_ROOT} \
  &> /dev/null; \
  then \
    /usr/bin/etcdctl \
      ${REGISTER_ETCD_PARAMETERS} \
      rm \
      ${REGISTER_KEY_ROOT} \
      --recursive; \
  fi"

# Register service
ExecStart=/bin/bash -c \
  "until /usr/bin/etcdctl \
      ${REGISTER_ETCD_PARAMETERS} \
      get \
      ${REGISTER_KEY_ROOT}/ports/tcp/80 \
      &> /dev/null \
    || /usr/bin/etcdctl \
      ${REGISTER_ETCD_PARAMETERS} \
      get \
      ${REGISTER_KEY_ROOT}/ports/tcp/443 \
      &> /dev/null; \
    || /usr/bin/etcdctl \
      ${REGISTER_ETCD_PARAMETERS} \
      get \
      ${REGISTER_KEY_ROOT}/ports/tcp/8443 \
      &> /dev/null; \
  do \
    if /usr/bin/docker port {{SERVICE_UNIT_NAME}}.%i 80 &> /dev/null; \
    then \
      /usr/bin/etcdctl \
        ${REGISTER_ETCD_PARAMETERS} \
        mk \
        ${REGISTER_KEY_ROOT}/ports/tcp/80 \
        \"$(/usr/bin/docker port \
            {{SERVICE_UNIT_NAME}}.%i \
            80 \
          | /bin/sed 's~^[0-9.]*:~~' \
        )\" \
        --ttl ${REGISTER_TTL} 2> /dev/null; \
    fi; \
    if /usr/bin/docker port {{SERVICE_UNIT_NAME}}.%i 443 &> /dev/null; \
    then \
      /usr/bin/etcdctl \
        ${REGISTER_ETCD_PARAMETERS} \
        mk \
        ${REGISTER_KEY_ROOT}/ports/tcp/443 \
        \"$(/usr/bin/docker port \
            {{SERVICE_UNIT_NAME}}.%i \
            443 \
          | /bin/sed 's~^[0-9.]*:~~' \
        )\" \
        --ttl ${REGISTER_TTL} 2> /dev/null; \
    fi; \
    if /usr/bin/docker port {{SERVICE_UNIT_NAME}}.%i 8443 &> /dev/null; \
    then \
      /usr/bin/etcdctl \
        ${REGISTER_ETCD_PARAMETERS} \
        mk \
        ${REGISTER_KEY_ROOT}/ports/tcp/8443 \
        \"$(/usr/bin/docker port \
            {{SERVICE_UNIT_NAME}}.%i \
            8443 \
          | /bin/sed 's~^[0-9.]*:~~' \
        )\" \
        --ttl ${REGISTER_TTL} 2> /dev/null; \
    fi; \
    sleep 0.5; \
  done; \
  /usr/bin/etcdctl \
    ${REGISTER_ETCD_PARAMETERS} \
    mk \
    ${REGISTER_KEY_ROOT}/hostname \
    %H \
    --ttl ${REGISTER_TTL}; \
  while true; \
  do \
    sleep ${REGISTER_UPDATE_INTERVAL}; \
    if /usr/bin/docker port {{SERVICE_UNIT_NAME}}.%i 80 &> /dev/null; \
    then \
      /usr/bin/etcdctl \
        ${REGISTER_ETCD_PARAMETERS} \
        $(if ! /usr/bin/etcdctl \
            ${REGISTER_ETCD_PARAMETERS} \
            get \
            ${REGISTER_KEY_ROOT}/ports/tcp/80 \
          &> /dev/null; \
        then \
          printf -- 'set\n'; \
        else \
          printf -- 'update\n'; \
        fi) \
        ${REGISTER_KEY_ROOT}/ports/tcp/80 \
        \"$(/usr/bin/docker port \
            {{SERVICE_UNIT_NAME}}.%i \
            80 \
          | /bin/sed 's~^[0-9.]*:~~' \
        )\" \
        --ttl ${REGISTER_TTL}; \
      /usr/bin/etcdctl \
        ${REGISTER_ETCD_PARAMETERS} \
        $(if ! /usr/bin/etcdctl \
            ${REGISTER_ETCD_PARAMETERS} \
            get \
            ${REGISTER_KEY_ROOT}/ports/tcp/443 \
          &> /dev/null; \
        then \
          printf -- 'set\n'; \
        else \
          printf -- 'update\n'; \
        fi) \
        ${REGISTER_KEY_ROOT}/ports/tcp/443 \
        \"$(/usr/bin/docker port \
            {{SERVICE_UNIT_NAME}}.%i \
            443 \
          | /bin/sed 's~^[0-9.]*:~~' \
        )\" \
        --ttl ${REGISTER_TTL}; \
      /usr/bin/etcdctl \
        ${REGISTER_ETCD_PARAMETERS} \
        $(if ! /usr/bin/etcdctl \
            ${REGISTER_ETCD_PARAMETERS} \
            get \
            ${REGISTER_KEY_ROOT}/ports/tcp/8443 \
          &> /dev/null; \
        then \
          printf -- 'set\n'; \
        else \
          printf -- 'update\n'; \
        fi) \
        ${REGISTER_KEY_ROOT}/ports/tcp/8443 \
        \"$(/usr/bin/docker port \
            {{SERVICE_UNIT_NAME}}.%i \
            8443 \
          | /bin/sed 's~^[0-9.]*:~~' \
        )\" \
        --ttl ${REGISTER_TTL}; \
    fi; \
    /usr/bin/etcdctl \
      ${REGISTER_ETCD_PARAMETERS} \
      $(if ! /usr/bin/etcdctl \
          ${REGISTER_ETCD_PARAMETERS} \
          get \
          ${REGISTER_KEY_ROOT}/hostname \
        &> /dev/null; \
      then \
        printf -- 'set\n'; \
      else \
        printf -- 'update\n'; \
      fi) \
      ${REGISTER_KEY_ROOT}/hostname \
      %H \
      --ttl ${REGISTER_TTL}; \
  done"

# Unregister service
ExecStop=/bin/bash -c \
  "if /usr/bin/etcdctl \
    ${REGISTER_ETCD_PARAMETERS} \
    ls \
    ${REGISTER_KEY_ROOT} \
  &> /dev/null; \
  then \
    /usr/bin/etcdctl \
      ${REGISTER_ETCD_PARAMETERS} \
      rm \
      ${REGISTER_KEY_ROOT} \
      --recursive; \
  fi"

[Install]
DefaultInstance=1
RequiredBy={{SERVICE_UNIT_NAME}}@%i.service
