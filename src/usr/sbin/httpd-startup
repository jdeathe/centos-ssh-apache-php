#!/usr/bin/env bash

function absolute_path ()
{
	local DIRECTORY_PATH="${1:-}"
	local VALUE

	if [[ -n ${DIRECTORY_PATH} ]]; then
		VALUE="$(
			python -c "import os,sys; print os.path.abspath(sys.argv[1])" \
			"${DIRECTORY_PATH}"
		)"
	fi

	printf -- "%s" "${VALUE}"
}

function is_valid_apache_content_root ()
{
	local DIRECTORY_PATH="${1:-}"
	local DIRECTORY_PATH_ABSOLUTE="$(
		absolute_path \
			"${DIRECTORY_PATH}"
	)"
	local VALID_DIRECTORY='^\/(?!\/|bin|dev|etc|lib|lib64|lost+found|media|proc|root|sbin|sys|tmp|usr).+$'

	if grep -qoP "${VALID_DIRECTORY}" <<< "${DIRECTORY_PATH_ABSOLUTE}"; then
		return 0
	fi

	return 1
}

function get_absolute_apache_custom_log_location ()
{
	local CONTENT_ROOT
	local VALUE="${APACHE_CUSTOM_LOG_LOCATION:-}"

	# Set path as absolute relative to content root
	if [[ -n ${VALUE} ]] && [[ ! ${VALUE} =~ ^[\.]{,2}/ ]]; then
		CONTENT_ROOT="$(
			get_apache_content_root
		)"

		printf -v \
			VALUE \
			-- '%s/%s' \
			"${CONTENT_ROOT}" \
			"${VALUE}"
	fi

	printf -- \
		'%s' \
		"${VALUE}"
}

function get_absolute_apache_error_log_location ()
{
	local CONTENT_ROOT
	local VALUE="${APACHE_ERROR_LOG_LOCATION:-}"

	# Set path as absolute relative to content root
	if [[ -n ${VALUE} ]] && [[ ! ${VALUE} =~ ^[\.]{,2}/ ]]; then
		CONTENT_ROOT="$(
			get_apache_content_root
		)"

		printf -v \
			VALUE \
			-- '%s/%s' \
			"${CONTENT_ROOT}" \
			"${VALUE}"
	fi

	printf -- \
		'%s' \
		"${VALUE}"
}

function get_apache_content_root ()
{
	local DEFAULT_VALUE="${1:-/var/www/app}"
	local VALUE="${APACHE_CONTENT_ROOT:-}"

	if [[ -z ${VALUE} ]] || ! is_valid_apache_content_root "${VALUE}"; then
		VALUE="${DEFAULT_VALUE}"
	fi

	printf -- "%s" "${VALUE}"
}

function get_apache_header_x_service_uid ()
{
	local HOST_NAME="${HOSTNAME:-}"
	local VALUE="${APACHE_HEADER_X_SERVICE_UID:-}"

	if [[ -n ${VALUE} ]]; then
		if [[ -z ${HOST_NAME} ]]; then
			HOST_NAME="$(
				hostname
			)"
		fi

		# Replace {{HOSTNAME}} with system hostname
		VALUE="${VALUE//\{\{HOSTNAME\}\}/${HOST_NAME}}"
	fi

	printf -- \
		'%s' \
		"${VALUE}"
}

function get_apache_server_alias ()
{
	local HOST_NAME="${HOSTNAME:-}"
	local VALUE="${APACHE_SERVER_ALIAS:-}"

	if [[ -n ${VALUE} ]]; then
		if [[ -z ${HOST_NAME} ]]; then
			HOST_NAME="$(
				hostname
			)"
		fi

		# Replace {{HOSTNAME}} with system hostname
		VALUE="${VALUE//\{\{HOSTNAME\}\}/${HOST_NAME}}"
	fi

	printf -- \
		'%s' \
		"${VALUE}"
}

function get_apache_server_name ()
{
	local HOST_NAME="${HOSTNAME:-}"
	local VALUE="${APACHE_SERVER_NAME:-}"

	if [[ -z ${HOST_NAME} ]]; then
		HOST_NAME="$(
			hostname
		)"
	fi

	if [[ -z ${VALUE} ]]; then
		VALUE="${HOST_NAME}"
	else
		VALUE="${VALUE//\{\{HOSTNAME\}\}/${HOST_NAME}}"
	fi

	printf -- \
		'%s' \
		"${VALUE}"
}

unset BASH_ENV ENV

export APACHE_CUSTOM_LOG_LOCATION="$(
	get_absolute_apache_custom_log_location
)"
export APACHE_ERROR_LOG_LOCATION="$(
	get_absolute_apache_error_log_location
)"
export APACHE_HEADER_X_SERVICE_UID="$(
	get_apache_header_x_service_uid
)"
export APACHE_SERVER_ALIAS="$(
	get_apache_server_alias
)"
export APACHE_SERVER_NAME="$(
	get_apache_server_name
)"

if [[ -n ${@} ]]; then
	exec "${@}"
fi
