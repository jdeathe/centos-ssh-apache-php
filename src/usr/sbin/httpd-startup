#!/usr/bin/env bash

function __absolute_path ()
{
	local -r directory_path="${1}"

	local value

	if [[ -n ${directory_path} ]]
	then
		value="$(
			python -c "import os,sys; print os.path.abspath(sys.argv[1])" \
			"${directory_path}"
		)"
	fi

	printf -- '%s' "${value}"
}

function __is_valid_apache_content_root ()
{
	local -r directory_path="${1}"
	local -r valid_directory='^\/(?!\/|bin|dev|etc|lib|lib64|lost+found|media|proc|root|sbin|sys|tmp|usr).+$'

	local absolute_path="$(
		__absolute_path \
			"${directory_path}"
	)"

	if grep -qoP "${valid_directory}" <<< "${absolute_path}"
	then
		return 0
	fi

	return 1
}

function get_absolute_apache_custom_log_location ()
{
	local content_root
	local value="${APACHE_CUSTOM_LOG_LOCATION}"

	if [[ -n ${value} ]] \
		&& [[ ! ${value} =~ ^[\.]{,2}/ ]]
	then
		content_root="$(
			get_apache_content_root
		)"

		printf -v \
			value \
			-- '%s/%s' \
			"${content_root}" \
			"${value}"
	fi

	printf -- '%s' "${value}"
}

function get_absolute_apache_error_log_location ()
{
	local content_root
	local value="${APACHE_ERROR_LOG_LOCATION}"

	if [[ -n ${value} ]] \
		&& [[ ! ${value} =~ ^[\.]{,2}/ ]]
	then
		content_root="$(
			get_apache_content_root
		)"

		printf -v \
			value \
			-- '%s/%s' \
			"${content_root}" \
			"${value}"
	fi

	printf -- '%s' "${value}"
}

function get_absolute_php_options_session_save_path ()
{
	local -r save_handler="${PHP_OPTIONS_SESSION_SAVE_HANDLER}"

	local content_root
	local value="${PHP_OPTIONS_SESSION_SAVE_PATH}"

	if [[ ${save_handler} == files ]] \
		&& [[ -n ${value} ]] \
		&& [[ ! ${value} =~ ^[\.]{,2}/ ]]
	then
		content_root="$(
			get_apache_content_root
		)"

		printf -v \
			value \
			-- '%s/%s' \
			"${content_root}" \
			"${value}"
	fi

	printf -- '%s' "${value}"
}

function get_apache_content_root ()
{
	local -r default_value="${1:-/var/www/app}"

	local value="${APACHE_CONTENT_ROOT}"

	if ! __is_valid_apache_content_root "${value}"
	then
		value="${default_value}"
	fi

	printf -- '%s' "${value}"
}

function get_apache_header_x_service_uid ()
{
	local hostname="${HOSTNAME}"
	local value="${APACHE_HEADER_X_SERVICE_UID}"

	if [[ -n ${value} ]]
	then
		if [[ -z ${hostname} ]]
		then
			hostname="$(
				hostname
			)"
		fi

		value="${value//'{{HOSTNAME}}'/${hostname}}"
	fi

	printf -- '%s' "${value}"
}

function get_apache_server_alias ()
{
	local hostname="${HOSTNAME}"
	local value="${APACHE_SERVER_ALIAS}"

	if [[ -n ${value} ]]
	then
		if [[ -z ${hostname} ]]
		then
			hostname="$(
				hostname
			)"
		fi

		value="${value//'{{HOSTNAME}}'/${hostname}}"
	fi

	printf -- '%s' "${value}"
}

function get_apache_server_name ()
{
	local hostname="${HOSTNAME}"
	local value="${APACHE_SERVER_NAME}"

	if [[ -z ${hostname} ]]
	then
		hostname="$(
			hostname
		)"
	fi

	if [[ -z ${value} ]]
	then
		value="${hostname}"
	else
		value="${value//'{{HOSTNAME}}'/${hostname}}"
	fi

	printf -- '%s' "${value}"
}

unset BASH_ENV ENV

export APACHE_CUSTOM_LOG_LOCATION="$(
	get_absolute_apache_custom_log_location
)"
export APACHE_ERROR_LOG_LOCATION="$(
	get_absolute_apache_error_log_location
)"
export APACHE_HEADER_X_SERVICE_UID="$(
	get_apache_header_x_service_uid
)"
export APACHE_SERVER_ALIAS="$(
	get_apache_server_alias
)"
export APACHE_SERVER_NAME="$(
	get_apache_server_name
)"
export PHP_OPTIONS_SESSION_SAVE_PATH="$(
	get_absolute_php_options_session_save_path
)"

if [[ -n ${@} ]]; then
	exec "${@}"
fi
